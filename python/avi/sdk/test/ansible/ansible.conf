virtualservice_object {
  uuid: "vs1"
  name: "vs1"
  vrf_context_uuid: "vrf_1"
  cloud_uuid: "Default-Cloud"
  se_group_uuid: "Default-Cloud-sg"
  services {
    port: 80
  }
  application_profile_uuid: "applicationprofile-1"
  pool_uuid: "p1"
  analytics_policy {
    client_insights: ACTIVE
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}
virtualservice_object {
  uuid: "vs2"
  name: "vs2"
  vrf_context_uuid: "vrf_1"
  cloud_uuid: "Default-Cloud"
  se_group_uuid: "Default-Cloud-sg"
  services {
    port: 80
  }
  application_profile_uuid: "applicationprofile-1"
  pool_uuid: "p2"
  analytics_policy {
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}
virtualservice_object {
  uuid: "vs3"
  name: "vs3"
  vrf_context_uuid: "vrf_1"
  cloud_uuid: "Default-Cloud"
  se_group_uuid: "Default-Cloud-sg"
  services {
    port: 80
  }
  application_profile_uuid: "applicationprofile-1"
  pool_uuid: "p3"
  analytics_policy {
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  analytics_profile_uuid: "ap1"
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}
virtualservice_object {
  uuid: "vs-health-test"
  name: "vs-health-test"
  vrf_context_uuid: "vrf_1"
  cloud_uuid: "Default-Cloud"
  se_group_uuid: "Default-Cloud-sg"
  services {
    port: 80
  }
  services {
    port: 443
    enable_ssl: true
  }
  application_profile_uuid: "applicationprofile-1"
  pool_uuid: "p-health-test"
  ssl_key_and_certificate_uuids: "rsa-cert-1"
  ssl_key_and_certificate_uuids: "ec-cert-1"
  ssl_profile_uuid: "allprofile"
  performance_limits {
    max_concurrent_connections: 1000
    max_throughput: 500
  }
  analytics_policy {
    client_insights: ACTIVE
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  analytics_profile_uuid: "ap1"
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}

virtualservice_object {
  uuid: "vs6"
  name: "vs6"
  vrf_context_uuid: "vrf_1"
  cloud_uuid: "Default-Cloud"
  se_group_uuid: "Default-Cloud-sg"
  services {
    port: 80
  }
  application_profile_uuid: "applicationprofile-1"
  pool_uuid: "p6"
  analytics_policy {
    client_insights: ACTIVE
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  analytics_profile_uuid: "analyticsprofile-6"
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}
pool_object {
  uuid: "p1"
  name: "p1"
  vrf_uuid: "vrf_1"
  default_server_port: 8000
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s1"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s2"
    app_type: "nodejs"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  tenant_uuid: "admin"
}
pool_object {
  uuid: "p2"
  name: "p2"
  vrf_uuid: "vrf_1"
  default_server_port: 80
  health_monitor_uuids: "System-Ping"
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s3"
    app_type: "httptest"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s4"
    app_type: "httptest"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  tenant_uuid: "admin"
}
pool_object {
  uuid: "p3"
  name: "p3"
  vrf_uuid: "vrf_1"
  default_server_port: 80
  health_monitor_uuids: "System-Ping"
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s5"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s6"
    app_type: "nodejs"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  application_persistence_profile_uuid: "client-ip"
  tenant_uuid: "admin"
}
pool_object {
  uuid: "p-health-test"
  name: "p-health-test"
  vrf_uuid: "vrf_1"
  default_server_port: 8000
  health_monitor_uuids: "System-Ping"
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-1"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-2"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-3"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-4"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-5"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-6"
    app_type: "nodejs"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  tenant_uuid: "admin"
}
pool_object {
  uuid: "p6"
  name: "p6"
  vrf_uuid: "vrf_1"
  default_server_port: 8000
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s6-1"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s6-2"
    app_type: "nodejs"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  tenant_uuid: "admin"
}
networkprofile_object {
  uuid: "networkprofile-1"
  name: "networkprofile-1"
  profile {
    type: PROTOCOL_TYPE_TCP_PROXY
    tcp_proxy_profile {
      idle_connection_type: CLOSE_IDLE
      idle_connection_timeout: 300
    }
  }
  tenant_uuid: "admin"
}
applicationprofile_object {
  uuid: "applicationprofile-1"
  name: "applicationprofile-1"
  type: APPLICATION_PROFILE_TYPE_HTTP
  http_profile {
    connection_multiplexing_enabled: false
  }
  tenant_uuid: "admin"
}
analyticsprofile_object {
  uuid: "ap1"
  name: "ap1"
}
analyticsprofile_object {
  uuid: "analyticsprofile-6"
  name: "analyticsprofile-6"
  disable_server_analytics: true
  disable_se_analytics: true
}
sslkeyandcertificateimport_object {
  name: "rsa-cert-1"
  certificate: "-----BEGIN CERTIFICATE-----\nMIIDkDCCAnigAwIBAgIJAOs6/m7GIV/lMA0GCSqGSIb3DQEBCwUAMEkxCzAJBgNV\nBAYTAlVTMQowCAYDVQQLDAFhMRgwFgYDVQQDDA9hdmluZXR3b3Jrcy5jb20xFDAS\nBgkqhkiG9w0BCQEWBWFAYi5jMB4XDTE4MDIwNjEzMDc1NloXDTE5MDIwNjEzMDc1\nNlowSTELMAkGA1UEBhMCVVMxCjAIBgNVBAsMAWExGDAWBgNVBAMMD2F2aW5ldHdv\ncmtzLmNvbTEUMBIGCSqGSIb3DQEJARYFYUBiLmMwggEiMA0GCSqGSIb3DQEBAQUA\nA4IBDwAwggEKAoIBAQDF1OnODcIwrPeA8GaPskahnzAJQqO7stVLKePrUkBi8EXd\n2v8jZdgEPVbTIgQM0/kymGwR6Q/gbA5NyVmA9aF/lMutrNANhFzFWCxknDrHtc2R\nzhsn7kMLdOcDKi7avOTo79THRbQ7fmhDNNnm7HNp74uU0Up7+iOe3Oz7V7AzXSii\ntlbXz43AjPoMoTDJ/MPakVXhPJKvJcFLN4vzpWLy+T25A2h33tnmSfSEOKHXq0Ul\nSOYznSRQUV8IRqxYCkGrduu9FDlwFuiAEOQz25rZnSdlp4MUeY1SK4sHTgZG1l2E\nCzgsDwYyQ8Jk/I7h/RZgaopyOEOhPCAnx2FYKbNZAgMBAAGjezB5MAkGA1UdEwQC\nMAAwLAYJYIZIAYb4QgENBB8WHU9wZW5TU0wgR2VuZXJhdGVkIENlcnRpZmljYXRl\nMB0GA1UdDgQWBBSz+W+XbHR1khuN94N5uGI6O/YdnTAfBgNVHSMEGDAWgBSz+W+X\nbHR1khuN94N5uGI6O/YdnTANBgkqhkiG9w0BAQsFAAOCAQEArxezZjqzPbkiqYQE\n6fZI419OBIje/2hq5adj9j9uKz9MBCon6XBNcLsv+qc0MBMQg5uDn7PgxxNil84p\n0sQF3DdF8wa7kCZwQbk6QsH3rvJhmyXVXkYCjX+fgiVBSjzT7QvYpkn/AAXlx44K\nIM0Vp154HG56hoGxqLXT1pVw+f9YNNtIe4MkxFh7asVywKtzm0Be0lLq85sfSEHd\nlq+4UHVW8L47JiWfTYaNKlZ8guWlaqSJED0zuvP/a8KZ0zxTAoRCBxdkDO0/7S1L\n+E8AzJMV3v4vWswoYmsUeV3Tpp8nnpmhDsT/G6Nb81T2Q2QF8CS9oD2BggCTG5Iw\naBRwTw==\n-----END CERTIFICATE-----\n"
  key: "-----BEGIN PRIVATE KEY-----\nMIIEwAIBADANBgkqhkiG9w0BAQEFAASCBKowggSmAgEAAoIBAQDF1OnODcIwrPeA\n8GaPskahnzAJQqO7stVLKePrUkBi8EXd2v8jZdgEPVbTIgQM0/kymGwR6Q/gbA5N\nyVmA9aF/lMutrNANhFzFWCxknDrHtc2Rzhsn7kMLdOcDKi7avOTo79THRbQ7fmhD\nNNnm7HNp74uU0Up7+iOe3Oz7V7AzXSiitlbXz43AjPoMoTDJ/MPakVXhPJKvJcFL\nN4vzpWLy+T25A2h33tnmSfSEOKHXq0UlSOYznSRQUV8IRqxYCkGrduu9FDlwFuiA\nEOQz25rZnSdlp4MUeY1SK4sHTgZG1l2ECzgsDwYyQ8Jk/I7h/RZgaopyOEOhPCAn\nx2FYKbNZAgMBAAECggEBAL2tqo55+pqY/KWP2YYlNDt6WaBHWJ16la7/dxwFPN6f\n6R0SAFZ8K2XFOh4tGx0BkIjGQ7fYcfSHJh/G0h4nZLTigXb/nmuXYSuFourEMEeT\nNIp7xuW+OGIfr+8E3u+y9PeyG50EZA424NivL82NIAuONZJ2KKg96TFEOaOzK6nS\nEXeuaoTyMNgUulqhfcKbBuN1vm/pK7oVKDnyCJBxE59sXcST3ewuo7pprZo7DEMp\nrVEqV4GlNMFazoJlI1MYNTjZYUBtXZyGSZogWokthRT2XpMxqKLcZAqQfCHJvnGb\nt/VdaZywtp1OM5oAKZ+1967jkbWjpOZS0gYhHr0201ECgYEA/n/MYHUC/iXwO8dv\nk3mJHoE40t+zLw5YqNzQB10Cf9IRJNCJKzKkb5V5rRqW0KlNkpCYZieHjKZmE56X\nPoOd4OgCbETVtWodIlPXc7ICKZ0SFxWkL3lirVZgpgW2DRDQRU+eYFlZzNxiWLWi\nuuFdYCmohh3cRAqJStGAA/qLVeMCgYEAxv+RSOnYKBzUkJPsG9r3xVx9BjOVoRW5\nYjmYSGVRFD5rYEx7VlmxtIqcdNS+4TUvsN/ZjE1ZNnICC35VkE/e04S0D8RSRmH4\nHphkUAW0CGyeq4/YUjPEHCuezUT4uWWiD5iLa1RWEnoFyF29UbJvehfQZ3jK5rqJ\nFKDawxQItpMCgYEAzsYIyInpb5JleDxWpAyH4rf88h/8lovibvhRMNpZ0H5dnXqt\nJ+LShTJ+FK3YwRn9Q8qld8JAOH9tyhz9JzaKjJQUe+EFfYsEtsJF9+M2LJdIfmb/\n6e6GxOy8Q8e6HS1++gFxXTjbZD3ezdJtr8axNhNCsA0MzF9/IsHKb/EdSh8CgYEA\ntL/Xr9mvW6fsLzIcyKRYXyyF5wcdxsXbr+tOdZuJTJDxqPNvJ9yqe6lXOQswIZDU\ns5xvlm9/M+PUFap3f2/8njUv9A5HCOTdoLSckM7NWsWGTaCHRQr9+vRn9lzKamN1\nEyNkp2VgFMI+1GLInhcsCELvKbze1znhXxpH+d8Nlv8CgYEArPoCBxKT+RorYfSU\nxvmrI/k4MbIGSbRwXPOVtOmKpz4b2IHXu9eQ7mQHt1vkpsv7pZ2JxK3ExffRVcqg\nWlSCuozgispMqMROcQw1lDt4gjbAMcdio1eENEXezwzuToXZgZrzAD1QZam9S7N0\n269okvQr9P0DJG+4V9Q3MNNhmRM=\n-----END PRIVATE KEY-----\n"
}
sslkeyandcertificateimport_object {
  name: "ec-cert-1"
  certificate: "-----BEGIN CERTIFICATE-----\nMIIBwDCCAWagAwIBAgIJAIwgXGgBdJDlMAoGCCqGSM49BAMCMCcxCzAJBgNVBAYT\nAlVTMRgwFgYDVQQDDA9hdmluZXR3b3Jrcy5jb20wHhcNMTgwMjA2MTMxMTI1WhcN\nMTkwMjA2MTMxMTI1WjAnMQswCQYDVQQGEwJVUzEYMBYGA1UEAwwPYXZpbmV0d29y\na3MuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEaURSm13s16gNhxw3BoVS\na631lQvC9Hf+7KuF79nRIAeg8nIsd515aXTl6XxjzYuKHLX8NK7FZOd6atkKt82o\nXaN7MHkwCQYDVR0TBAIwADAsBglghkgBhvhCAQ0EHxYdT3BlblNTTCBHZW5lcmF0\nZWQgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFCWB5LsXaB4ETMFQh/Bp4bOnmaOkMB8G\nA1UdIwQYMBaAFCWB5LsXaB4ETMFQh/Bp4bOnmaOkMAoGCCqGSM49BAMCA0gAMEUC\nIQD2iOwA/A/GeXaUMRpC+4enFn0o/e2BsXvePk/iDr0M5wIgGUwbEdrs0j9kdLhL\nqXjSVJUE/89GiV7zs93HZi18Mpg=\n-----END CERTIFICATE-----\n"
  key: "-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEINlh9+Hdv644soFuPBEe078l8gIjUDkYea241Vm6DEiEoAoGCCqGSM49\nAwEHoUQDQgAEaURSm13s16gNhxw3BoVSa631lQvC9Hf+7KuF79nRIAeg8nIsd515\naXTl6XxjzYuKHLX8NK7FZOd6atkKt82oXQ==\n-----END EC PRIVATE KEY-----\n"
}
sslprofile_object {
  name: "allprofile"
  accepted_versions {
    type: SSL_VERSION_TLS1
  }
  accepted_versions {
    type: SSL_VERSION_TLS1_1
  }
  accepted_versions {
    type: SSL_VERSION_TLS1_2
  }
  accepted_ciphers: "ALL:!DES:!EXP"
  tenant_uuid: "admin"
}
applicationpersistenceprofile_object {
  uuid: "uuid"
  name: "client-ip"
  persistence_type: PERSISTENCE_TYPE_CLIENT_IP_ADDRESS
  ip_persistence_profile {
    ip_persistent_timeout: 5
  }
}
# Added configuration for non default cloud
cloud_object {
  name: "vmware"
  vtype: CLOUD_VCENTER
  vcenter_configuration {
    username: "root"
    password: "vmware"
    vcenter_url: "10.10.2.9"
    privilege: READ_ACCESS
    datacenter: "Sunnyvale"
    management_network: "Mgmt_Arista_3"
 }
}

virtualservice_object {
  uuid: "non-default-cloud-vs"
  name: "non-default-cloud-vs"
  cloud_uuid: "vmware"
  se_group_uuid: "vmware-sg"
  vrf_context_uuid:  "vrf_2"
  services {
    port: 80
  }
  services {
    port: 443
    enable_ssl: true
  }
  application_profile_uuid: "non-default-app"
  pool_uuid: "non-deafault-pool"
  ssl_key_and_certificate_uuids: "rsa-cert-1"
  ssl_key_and_certificate_uuids: "ec-cert-1"
  ssl_profile_uuid: "allprofile"
  performance_limits {
    max_concurrent_connections: 1000
    max_throughput: 500
  }
  analytics_policy {
    client_insights: ACTIVE
    metrics_realtime_update {
      enabled: true
      duration: 0
    }
  }
  analytics_profile_uuid: "ap1"
  tenant_uuid: "admin"
  vip {
    vip_id: "0"
    ip_address {
      addr: "${net1}"
      type: V4
    }
  }
}

applicationprofile_object {
  uuid: "non-default-app"
  name: "non-default-app"
  type: APPLICATION_PROFILE_TYPE_HTTP
  http_profile {
    connection_multiplexing_enabled: false
  }
  tenant_uuid: "admin"
}

pool_object {
  uuid: "non-deafault-pool"
  name: "non-deafault-pool"
  vrf_uuid:  "vrf_2"
  cloud_uuid: "vmware"
  default_server_port: 8000
  health_monitor_uuids: "System-Ping"
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-1"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-2"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-3"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-4"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-5"
    app_type: "nodejs"
  }
  servers {
    ip {
      addr: "${net1}"
      type: V4
    }
    handle: "s-health-test-nd-6"
    app_type: "nodejs"
  }
  lb_algorithm: LB_ALGORITHM_ROUND_ROBIN
  tenant_uuid: "admin"
}

vrfcontext_object {
   uuid: "vrf_1"
   name: "vrf_1"
   cloud_uuid: "Default-Cloud"
}
vrfcontext_object {
   uuid: "vrf_2"
   name: "vrf_2"
   cloud_uuid: "vmware"
}

serviceenginegroup_object {
  uuid: "Default-Cloud-sg"
  name: "Default-Cloud-sg"
  cloud_uuid: "Default-Cloud"
  max_scaleout_per_vs: 1
  min_scaleout_per_vs: 1
  ha_mode: HA_MODE_SHARED
}

serviceenginegroup_object {
  uuid: "vmware-sg"
  name: "vmware-sg"
  cloud_uuid: "vmware"
  max_scaleout_per_vs: 1
  min_scaleout_per_vs: 1
  ha_mode: HA_MODE_SHARED
}
