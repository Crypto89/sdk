---
- hosts: localhost
  connection: local

  vars:
   avi_credentials:
    controller: "{{ lookup('env', 'AVI_CONTROLLER') }}"
    username: "{{ lookup('env', 'AVI_USERNAME') }}"
    password: "{{ lookup('env', 'AVI_PASSWORD') }}"
    api_version: "{{ lookup('env', 'API_VERSION') }}"

  roles:
    - role: avinetworks.avisdk
  tasks:
    - block:
      - name: Create wafprofile object
        avi_wafprofile:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          state: present
          name: Test-WAF-Profile
          tenant_ref: "/api/tenant/?name=admin"
          config:
            client_nonfile_upload_max_body_size: 128
            regex_match_limit: 1500
            allowed_request_content_types:
            - application/x-www-form-urlencoded
            - multipart/form-data
            - text/xml
            - application/xml
            - application/x-amf
            - application/json
            allowed_methods:
            - HTTP_METHOD_GET
            - HTTP_METHOD_HEAD
            - HTTP_METHOD_POST
            - HTTP_METHOD_OPTIONS
            response_hdr_default_action: phase:3,deny,status:403,log,auditlog
            allowed_http_versions:
            - ONE_ZERO
            - ONE_ONE
            request_body_default_action: phase:2,deny,status:403,log,auditlog
            response_body_default_action: phase:4,deny,status:403,log,auditlog
            request_hdr_default_action: phase:1,deny,status:403,log,auditlog
            static_extensions:
            - ".gif"
            - ".jpg"
            - ".jpeg"
            - ".png"
            - ".js"
            - ".css"
            - ".ico"
            - ".svg"
            - ".webp"
            buffer_response_body_for_inspection: false
            restricted_extensions:
            - ".asa"
            - ".asax"
            - ".ascx"
            client_file_upload_max_body_size: 1024
            cookie_format_version: 0
            restricted_headers:
            - Proxy-Connection
            - Lock-Token
            - Content-Range
            - Translate
            - via
            - if
            server_response_max_body_size: 128
            argument_separator: "&"
        register: result

      - name: Update wafprofile object
        avi_wafprofile:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          avi_api_update_method: patch
          avi_api_patch_op: add
          uuid: "{{result.obj.uuid}}"
          name: Test-WAF-Profile
          tenant_ref: "/api/tenant/?name=admin"
          config:
            allowed_request_content_types:
            - application/x-www-form-urlencoded
            - multipart/form-data
            - text/xml
            - application/xml
            - application/x-amf
            - application/json
        register: updated_result

      - name: Delete wafprofile object
        avi_wafprofile:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          state: 'absent'
          uuid: "{{result.obj.uuid}}"
          name: Test-WAF-Profile
          config:
            allowed_request_content_types:
            - application/x-www-form-urlencoded
            - multipart/form-data
            - text/xml
            - application/xml
            - application/x-amf
            - application/json
        register: delete_result

      - name: Check wafprofile deleted or not
        avi_api_session:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          http_method: get
          path: wafprofile
        register: get_result
      - fail: msg="Wafprofile not deleted "
        when:
          - 'get_result.obj.count != 1'