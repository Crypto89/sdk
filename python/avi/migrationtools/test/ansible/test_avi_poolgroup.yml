---
- hosts: localhost
  connection: local

  vars:
   avi_credentials:
      controller: "{{ lookup('env', 'AVI_CONTROLLER') }}"
      username: "{{ lookup('env', 'AVI_USERNAME') }}"
      password: "{{ lookup('env', 'AVI_PASSWORD') }}"
      api_version: "{{ lookup('env', 'API_VERSION') }}"

  roles:
    - role: avinetworks.avisdk
  tasks:
    - block:
      - name: Create poolGroup
        avi_poolgroup:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          name: 'Test-PoolGroup'
          tenant_ref: "/api/tenant?name=admin"
          cloud_ref: "/api/cloud?name=Default-Cloud"
          min_servers: 2
        register: result
      - fail: msg="Poolgroup creation failed"
        when:
          - "'uuid' not in result.obj"

      - name: using update pool api patch
        avi_poolgroup:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          name: 'Test-PoolGroup-Patch'
          tenant_ref: "/api/tenant?name=admin"
          cloud_ref: "/api/cloud?name=Default-Cloud"
          min_servers: 3
          uuid: "{{result.obj.uuid}}"
          avi_api_patch_op: 'replace'
        register: result1
      - fail: msg="Poolgroup creation failed"
        when:
          - "'uuid' not in result1.obj"

      - name: delete pool group using api patch
        avi_poolgroup:
          controller: "{{ avi_credentials.controller }}"
          username: "{{ avi_credentials.username }}"
          password: "{{ avi_credentials.password }}"
          api_version: "{{avi_credentials.api_version}}"
          state: absent
          uuid: "{{result1.obj.uuid}}"
          name: "Test-PoolGroup-Patch"