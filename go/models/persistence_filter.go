package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PersistenceFilter persistence filter
// swagger:model PersistenceFilter
type PersistenceFilter struct {

	// Persistence cookie.
	PersistenceCookie string `json:"persistence_cookie,omitempty"`

	// Placeholder for description of property persistence_end_ip of obj type PersistenceFilter field type str  type object
	PersistenceEndIP *IPAddr `json:"persistence_end_ip,omitempty"`

	// Placeholder for description of property persistence_ip of obj type PersistenceFilter field type str  type object
	PersistenceIP *IPAddr `json:"persistence_ip,omitempty"`

	// Number of persistence_mask.
	PersistenceMask int32 `json:"persistence_mask,omitempty"`

	// Placeholder for description of property server_end_ip of obj type PersistenceFilter field type str  type object
	ServerEndIP *IPAddr `json:"server_end_ip,omitempty"`

	// Placeholder for description of property server_ip of obj type PersistenceFilter field type str  type object
	ServerIP *IPAddr `json:"server_ip,omitempty"`

	// Number of server_mask.
	ServerMask int32 `json:"server_mask,omitempty"`

	// Number of server_port.
	ServerPort int32 `json:"server_port,omitempty"`
}

// Validate validates this persistence filter
func (m *PersistenceFilter) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePersistenceEndIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validatePersistenceIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateServerEndIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateServerIP(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PersistenceFilter) validatePersistenceEndIP(formats strfmt.Registry) error {

	if swag.IsZero(m.PersistenceEndIP) { // not required
		return nil
	}

	if m.PersistenceEndIP != nil {

		if err := m.PersistenceEndIP.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("persistence_end_ip")
			}
			return err
		}
	}

	return nil
}

func (m *PersistenceFilter) validatePersistenceIP(formats strfmt.Registry) error {

	if swag.IsZero(m.PersistenceIP) { // not required
		return nil
	}

	if m.PersistenceIP != nil {

		if err := m.PersistenceIP.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("persistence_ip")
			}
			return err
		}
	}

	return nil
}

func (m *PersistenceFilter) validateServerEndIP(formats strfmt.Registry) error {

	if swag.IsZero(m.ServerEndIP) { // not required
		return nil
	}

	if m.ServerEndIP != nil {

		if err := m.ServerEndIP.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("server_end_ip")
			}
			return err
		}
	}

	return nil
}

func (m *PersistenceFilter) validateServerIP(formats strfmt.Registry) error {

	if swag.IsZero(m.ServerIP) { // not required
		return nil
	}

	if m.ServerIP != nil {

		if err := m.ServerIP.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("server_ip")
			}
			return err
		}
	}

	return nil
}
